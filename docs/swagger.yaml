basePath: /
definitions:
  domain.CreateGitRepo:
    properties:
      description:
        type: string
      isAutoInt:
        type: boolean
      isPrivate:
        type: boolean
      name:
        type: string
    type: object
  domain.GitRepo:
    properties:
      name:
        type: string
    type: object
  domain.GitWorkflow:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.User:
    properties:
      age:
        type: integer
      birthday:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:1323
info:
  contact: {}
  title: worklist Sample Swagger API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Show the status of server.
      tags:
      - root
  /api/v1/github/{owner}:
    get:
      consumes:
      - application/json
      description: Get repos by owner
      parameters:
      - description: owner of the repos
        in: path
        name: owner
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.GitRepo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get repos
    post:
      consumes:
      - application/json
      description: Create git Repo
      parameters:
      - description: owner of the repo
        in: path
        name: owner
        required: true
        type: string
      - description: Repo Info body
        in: body
        name: repo
        required: true
        schema:
          $ref: '#/definitions/domain.CreateGitRepo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create git Repo
  /api/v1/github/{owner}/{repo}:
    delete:
      consumes:
      - application/json
      description: Delete git Repo
      parameters:
      - description: owner of the repo
        in: path
        name: owner
        required: true
        type: string
      - description: repo
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete git Repo
    get:
      consumes:
      - application/json
      description: Get workflows by owner, repo
      parameters:
      - description: owner of the repo
        in: path
        name: owner
        required: true
        type: string
      - description: repo of the workflows
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.GitWorkflow'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get workflows
  /api/v1/login:
    get:
      consumes:
      - application/json
      description: get access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: login (issue token)
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Get all user's info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get users
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: User Info Body
        in: body
        name: userBody
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - ApiKeyAuth: []
      summary: Create user
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user's info
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: delete user by id
    get:
      consumes:
      - application/json
      description: Get user's info
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
    put:
      consumes:
      - application/json
      description: update user's info
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      - description: User Info Body
        in: body
        name: userBody
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: update user by id
securityDefinitions:
  ApiKeyAuth:
    description: Accesskey based security scheme to secure api
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
