basePath: /
definitions:
  domain.GitRepo:
    properties:
      name:
        type: string
    type: object
  domain.GitWorkflow:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.User:
    properties:
      age:
        type: integer
      birthday:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:1323
info:
  contact: {}
  title: Wookiist Sample Swagger API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /api/v1/github/{owner}:
    get:
      consumes:
      - application/json
      description: Get repos by owner
      parameters:
      - description: owner of the repos
        in: path
        name: owner
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.GitRepo'
            type: array
      summary: Get repos
  /api/v1/github/{owner}/{repo}:
    get:
      consumes:
      - application/json
      description: Get workflows by owner, repo
      parameters:
      - description: owner of the repo
        in: path
        name: owner
        required: true
        type: string
      - description: repo of the workflows
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.GitWorkflow'
            type: array
      summary: Get workflows
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Get all user's info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get users
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: User Info Body
        in: body
        name: userBody
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Create user
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user's info
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: delete user by id
    get:
      consumes:
      - application/json
      description: Get user's info
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Get user by id
    put:
      consumes:
      - application/json
      description: update user's info
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: string
      - description: User Info Body
        in: body
        name: userBody
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: update user by id
swagger: "2.0"
